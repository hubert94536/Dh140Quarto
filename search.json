[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/Billionaires.html",
    "href": "posts/Billionaires.html",
    "title": "myblog",
    "section": "",
    "text": "For my project, I will be analyzing information on billionaires worldwide. The dataset I will be using is from the CorGIS Dataset Project, and contains information on over 2,000 billionaires from various countries, along with details about their source of wealth, net worth, and industry.\nThe dataset can be found here: https://corgis-edu.github.io/corgis/csv/billionaires/\nThe dataset is stored as a comma-separate file format, which makes it easy to understand and analyze with Python. There are a total of 23 columns containing information such name, gender, age, source of wealth, industry, net worth. Overall, this dataset provides a thorough amount of information on billionaires to gain insight into the distribution and accumulation of wealth among individuals in different industries, countries, and demographics.\nMy motivation for this project is to gain a deeper understanding of how wealth is distributed globally, and to explore the factors that contribute to the wealth of billionaires. In prior classes, I explored how different factors affected income inequality but I wanted to dive deeper into how certain individuals amass vass amounts of wealth beyond the average person. Additionally, I am interested in examining patterns and trends in data on billionaires to identify commonalities and differences between billionaires from different demographics. Using this information, I can showcase the factors that are more likely to lead towards financial success and ways to make the distribution of wealth more equitable.\nThere are several questions I aim to answer in this project:\n\nWhat are the top industries that billionaires are involved in, and how has this changed over time?\nHow does the net worth of billionaires vary by industry, country, and gender?\nAre there any notable patterns or trends in the data that can help explain the distribution of wealth among billionaires?\n\n\n\n\n\nimport requests\nfrom bs4 import BeautifulSoup\nimport pandas as pd\n\n# Fetching billionaires dataset\nsite = \"https://corgis-edu.github.io/corgis/csv/billionaires/\"\npage = requests.get(site)\nsoup = BeautifulSoup(page.content, \"html.parser\")\nfor link in soup.find_all(\"a\"):\n    if link.has_attr(\"download\"):\n        csv_link = site + link[\"href\"]\n        break\nbillionaires_df = pd.read_csv(csv_link)\n\n# Filter out billionaires with age <= 0 due to being a married couple\nbillionaires_df = billionaires_df[billionaires_df['demographics.age'] > 0]\n\nprint(\"Billionaires Dataset Sample\")\nbillionaires_df.head()\n\nBillionaires Dataset Sample\n\n\n\n\n\n\n  \n    \n      \n      name\n      rank\n      year\n      company.founded\n      company.name\n      company.relationship\n      company.sector\n      company.type\n      demographics.age\n      demographics.gender\n      ...\n      location.gdp\n      location.region\n      wealth.type\n      wealth.worth in billions\n      wealth.how.category\n      wealth.how.from emerging\n      wealth.how.industry\n      wealth.how.inherited\n      wealth.how.was founder\n      wealth.how.was political\n    \n  \n  \n    \n      0\n      Bill Gates\n      1\n      1996\n      1975\n      Microsoft\n      founder\n      Software\n      new\n      40\n      male\n      ...\n      8.100000e+12\n      North America\n      founder non-finance\n      18.5\n      New Sectors\n      True\n      Technology-Computer\n      not inherited\n      True\n      True\n    \n    \n      1\n      Bill Gates\n      1\n      2001\n      1975\n      Microsoft\n      founder\n      Software\n      new\n      45\n      male\n      ...\n      1.060000e+13\n      North America\n      founder non-finance\n      58.7\n      New Sectors\n      True\n      Technology-Computer\n      not inherited\n      True\n      True\n    \n    \n      2\n      Bill Gates\n      1\n      2014\n      1975\n      Microsoft\n      founder\n      Software\n      new\n      58\n      male\n      ...\n      0.000000e+00\n      North America\n      founder non-finance\n      76.0\n      New Sectors\n      True\n      Technology-Computer\n      not inherited\n      True\n      True\n    \n    \n      3\n      Warren Buffett\n      2\n      1996\n      1962\n      Berkshire Hathaway\n      founder\n      Finance\n      new\n      65\n      male\n      ...\n      8.100000e+12\n      North America\n      founder non-finance\n      15.0\n      Traded Sectors\n      True\n      Consumer\n      not inherited\n      True\n      True\n    \n    \n      4\n      Warren Buffett\n      2\n      2001\n      1962\n      Berkshire Hathaway\n      founder\n      Finance\n      new\n      70\n      male\n      ...\n      1.060000e+13\n      North America\n      founder non-finance\n      32.3\n      Traded Sectors\n      True\n      Consumer\n      not inherited\n      True\n      True\n    \n  \n\n5 rows × 22 columns\n\n\n\n\nprint(\"Billionaires Dataset Summary Statistics\")\nbillionaires_df.describe()\n\nBillionaires Dataset Summary Statistics\n\n\n\n\n\n\n  \n    \n      \n      rank\n      year\n      company.founded\n      demographics.age\n      location.gdp\n      wealth.worth in billions\n    \n  \n  \n    \n      count\n      2229.000000\n      2229.000000\n      2229.000000\n      2229.000000\n      2.229000e+03\n      2229.000000\n    \n    \n      mean\n      641.864065\n      2009.772992\n      1942.800808\n      62.576492\n      1.617510e+12\n      3.723329\n    \n    \n      std\n      476.645256\n      6.790304\n      175.141855\n      13.134715\n      3.505285e+12\n      5.407252\n    \n    \n      min\n      1.000000\n      1996.000000\n      0.000000\n      12.000000\n      0.000000e+00\n      1.000000\n    \n    \n      25%\n      234.000000\n      2001.000000\n      1941.000000\n      53.000000\n      0.000000e+00\n      1.400000\n    \n    \n      50%\n      490.000000\n      2014.000000\n      1968.000000\n      62.000000\n      0.000000e+00\n      2.100000\n    \n    \n      75%\n      1046.000000\n      2014.000000\n      1987.000000\n      72.000000\n      1.690000e+11\n      3.600000\n    \n    \n      max\n      1565.000000\n      2014.000000\n      2012.000000\n      98.000000\n      1.060000e+13\n      76.000000\n    \n  \n\n\n\n\n\nimport matplotlib.pyplot as plt\n\nplt.hist(data=billionaires_df, x='wealth.worth in billions', bins=20)\nplt.title('Distribution of Net Worth')\nplt.xlabel('Net Worth (in billions USD)')\nplt.ylabel('Number of Billionaires')\nplt.show()\n\n\n\n\n\ntop_industries = billionaires_df['wealth.how.industry'].value_counts().nlargest(10)\nplt.bar(x=top_industries.index, height=top_industries.values)\nplt.xticks(rotation=90)\nplt.title('Top 10 Industries of Billionaires')\nplt.xlabel('Industry')\nplt.ylabel('Number of Billionaires')\nplt.show()\n\n\n\n\n\ngender_counts = billionaires_df['demographics.gender'].value_counts()\nplt.pie(x=gender_counts.values, labels=gender_counts.index, autopct='%1.1f%%')\nplt.title('Gender Distribution of Billionaires')\nplt.show()\n\n\n\n\n\nplt.hist(data=billionaires_df, x='demographics.age', bins=20)\nplt.title('Distribution of Net Worth')\nplt.xlabel('Age')\nplt.ylabel('Count')\nplt.show()\n\n\n\n\n\n\n\n\ntop_industries = billionaires_df['wealth.how.industry'].value_counts().nlargest(10)\nplt.bar(x=top_industries.index, height=top_industries.values)\nplt.xticks(rotation=90)\nplt.title('Top Industries of Billionaires')\nplt.xlabel('Industry')\nplt.ylabel('Number of Billionaires')\nplt.show()\n\n\n\n\n\n# Group billionaires by industry and year and count the number of billionaires\nindustry_year_counts = billionaires_df.groupby(['wealth.how.industry', 'year'])['name'].count().reset_index()\n# Sort by year and count\nindustry_year_counts = industry_year_counts.sort_values(['year', 'name'], ascending=[True, False])\n# Get top 10 industries for most recent year in the dataset\ntop_industries = industry_year_counts[industry_year_counts['year'] == 2014].head(10)['wealth.how.industry'].values\n# Filter dataset to only include top industries for most recent year\ntop_industry_counts = industry_year_counts[industry_year_counts['wealth.how.industry'].isin(top_industries)]\n\nplt.figure(figsize=(12,10))\nfor industry in top_industries:\n    plt.plot('year', 'name', data=top_industry_counts[top_industry_counts['wealth.how.industry'] == industry], label=industry)\n\nplt.legend()\nplt.title('Top Industries of Billionaires over Time')\nplt.xlabel('Year')\nplt.xlim([1996, 2014])\nplt.ylabel('Number of Billionaires')\nplt.show()\n\n\n\n\n\nbillionaires_df.plot.scatter(x='demographics.age', y='wealth.worth in billions')\nplt.title('Net Worth vs. Age among Billionaires')\nplt.xlabel('Age')\nplt.ylabel('Net Worth (in billions)')\nplt.show()\n\n\n\n\n\ntop_10_countries = billionaires_df['location.country code'].value_counts().head(10)\nplt.figure(figsize=(10,5))\nplt.bar(top_10_countries.index, top_10_countries.values)\nplt.title('Top 10 Countries with the Most Billionaires')\nplt.xlabel('Country')\nplt.ylabel('Number of Billionaires')\nplt.show()"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "myblog",
    "section": "",
    "text": "Income Inequality\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 13, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMar 10, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  }
]